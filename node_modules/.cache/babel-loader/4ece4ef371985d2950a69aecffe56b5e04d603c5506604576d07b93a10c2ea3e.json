{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mambo\\\\Downloads\\\\ONVM\\\\frontend\\\\src\\\\components\\\\Communities.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = process.env.REACT_APP_API_URL;\nconsole.log(\"API URL utilisée :\", apiUrl);\nfunction Communities({\n  userId\n}) {\n  const {\n    communityId\n  } = useParams();\n  const [community, setCommunity] = useState({});\n  const [members, setMembers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [profilePhoto, setProfilePhoto] = useState(null);\n\n  // Fonction pour récupérer les détails de la communauté\n  const fetchCommunityDetails = useCallback(() => {\n    if (!communityId) {\n      console.warn(\"[LOG] L'ID de la communauté est manquant.\");\n      return;\n    }\n    console.log(`[LOG] Récupération des détails de la communauté avec ID : ${communityId}`);\n    axios.get(`${apiUrl}/api/communities/${communityId}`).then(response => {\n      console.log(\"[LOG] Détails de la communauté récupérés :\", response.data);\n      setCommunity(response.data);\n    }).catch(error => console.error(\"[ERREUR] Erreur lors de la récupération de la communauté:\", error));\n  }, [communityId]);\n\n  // Fonction pour récupérer les membres de la communauté\n  const fetchMembers = useCallback(() => {\n    if (!communityId) return;\n    console.log(`[LOG] Récupération des membres de la communauté avec ID : ${communityId}`);\n    axios.get(`${apiUrl}/api/communities/${communityId}/members`).then(response => {\n      console.log(\"[LOG] Membres récupérés :\", response.data);\n      setMembers(response.data);\n    }).catch(error => console.error(\"[ERREUR] Erreur lors de la récupération des membres:\", error));\n  }, [communityId]);\n\n  // Fonction pour récupérer les messages de la communauté\n  const fetchMessages = useCallback(() => {\n    if (!communityId) return;\n    console.log(`[LOG] Récupération des messages de la communauté avec ID : ${communityId}`);\n    axios.get(`${apiUrl}/api/communities/${communityId}/messages`).then(response => {\n      console.log(\"[LOG] Messages récupérés :\", response.data);\n      setMessages(response.data);\n    }).catch(error => console.error(\"[ERREUR] Erreur lors de la récupération des messages:\", error));\n  }, [communityId]);\n  useEffect(() => {\n    fetchCommunityDetails();\n    fetchMembers();\n    fetchMessages();\n  }, [fetchCommunityDetails, fetchMembers, fetchMessages]);\n\n  // Fonction pour envoyer un nouveau message\n  const handleSendMessage = () => {\n    if (newMessage.trim() === '') return;\n    console.log(`[LOG] Envoi d'un message dans la communauté ID : ${communityId}`);\n    axios.post(`${apiUrl}/api/communities/${communityId}/messages`, {\n      content: newMessage,\n      user_id: userId\n    }).then(response => {\n      console.log(\"[LOG] Message envoyé avec succès :\", response.data);\n      setMessages([...messages, response.data]);\n      setNewMessage('');\n    }).catch(error => console.error(\"[ERREUR] Erreur lors de l'envoi du message:\", error));\n  };\n\n  // Fonction pour gérer le téléchargement de la photo de profil\n  const handleProfilePhotoUpload = () => {\n    if (!communityId) {\n      console.error(\"[ERREUR] L'ID de la communauté est manquant lors du téléchargement de la photo.\");\n      return;\n    }\n    if (!profilePhoto) {\n      console.error(\"[ERREUR] Aucune photo sélectionnée pour le téléchargement.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append('profilePhoto', profilePhoto);\n    console.log(`[LOG] Début du téléchargement de la photo de profil pour la communauté ID : ${communityId}`);\n    axios.post(`${apiUrl}/api/communities/${communityId}/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      console.log(\"[LOG] Photo de profil mise à jour avec succès :\", response.data);\n      alert('Photo de profil mise à jour');\n      setProfilePhoto(null);\n      fetchCommunityDetails(); // Recharge les détails de la communauté pour afficher la nouvelle photo\n    }).catch(error => {\n      console.error(\"[ERREUR] Erreur lors du téléchargement de la photo de profil:\", error);\n      alert('Erreur lors du téléchargement de la photo de profil.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: community.name || 'Chargement...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: community.description || 'Description non disponible.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Photo de profil actuelle :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), community.profile_photo ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${apiUrl}${community.profile_photo}`,\n        alt: \"Profil de la communaut\\xE9\",\n        style: {\n          width: '100px',\n          height: '100px',\n          borderRadius: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucune photo de profil disponible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Changer la photo de profil:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => {\n          console.log(\"[LOG] Photo sélectionnée :\", e.target.files[0]);\n          setProfilePhoto(e.target.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleProfilePhotoUpload,\n        children: \"T\\xE9l\\xE9charger la nouvelle photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Membres :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: members.length > 0 ? members.map((member, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: member.username\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucun membre pour le moment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Discussions :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.length > 0 ? messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }, this), \" \", message.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucun message pour le moment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\xC9crire un message...\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Envoyer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\nexport default Communities;","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","useParams","jsxDEV","_jsxDEV","apiUrl","process","env","REACT_APP_API_URL","console","log","Communities","userId","communityId","community","setCommunity","members","setMembers","messages","setMessages","newMessage","setNewMessage","profilePhoto","setProfilePhoto","fetchCommunityDetails","warn","get","then","response","data","catch","error","fetchMembers","fetchMessages","handleSendMessage","trim","post","content","user_id","handleProfilePhotoUpload","formData","FormData","append","headers","alert","children","name","fileName","_jsxFileName","lineNumber","columnNumber","description","profile_photo","src","alt","style","width","height","borderRadius","type","onChange","e","target","files","onClick","length","map","member","index","username","className","message","placeholder","value"],"sources":["C:/Users/mambo/Downloads/ONVM/frontend/src/components/Communities.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\n\r\nconsole.log(\"API URL utilisée :\", apiUrl);\r\n\r\n\r\n\r\nfunction Communities({ userId }) {\r\n    const { communityId } = useParams();\r\n    const [community, setCommunity] = useState({});\r\n    const [members, setMembers] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [profilePhoto, setProfilePhoto] = useState(null);\r\n\r\n    // Fonction pour récupérer les détails de la communauté\r\n    const fetchCommunityDetails = useCallback(() => {\r\n        if (!communityId) {\r\n            console.warn(\"[LOG] L'ID de la communauté est manquant.\");\r\n            return;\r\n        }\r\n        console.log(`[LOG] Récupération des détails de la communauté avec ID : ${communityId}`);\r\n\r\n        axios.get(`${apiUrl}/api/communities/${communityId}`)\r\n            .then(response => {\r\n                console.log(\"[LOG] Détails de la communauté récupérés :\", response.data);\r\n                setCommunity(response.data);\r\n            })\r\n            .catch(error => console.error(\"[ERREUR] Erreur lors de la récupération de la communauté:\", error));\r\n    }, [communityId]);\r\n\r\n    // Fonction pour récupérer les membres de la communauté\r\n    const fetchMembers = useCallback(() => {\r\n        if (!communityId) return;\r\n\r\n        console.log(`[LOG] Récupération des membres de la communauté avec ID : ${communityId}`);\r\n        axios.get(`${apiUrl}/api/communities/${communityId}/members`)\r\n            .then(response => {\r\n                console.log(\"[LOG] Membres récupérés :\", response.data);\r\n                setMembers(response.data);\r\n            })\r\n            .catch(error => console.error(\"[ERREUR] Erreur lors de la récupération des membres:\", error));\r\n    }, [communityId]);\r\n\r\n    // Fonction pour récupérer les messages de la communauté\r\n    const fetchMessages = useCallback(() => {\r\n        if (!communityId) return;\r\n\r\n        console.log(`[LOG] Récupération des messages de la communauté avec ID : ${communityId}`);\r\n        axios.get(`${apiUrl}/api/communities/${communityId}/messages`)\r\n            .then(response => {\r\n                console.log(\"[LOG] Messages récupérés :\", response.data);\r\n                setMessages(response.data);\r\n            })\r\n            .catch(error => console.error(\"[ERREUR] Erreur lors de la récupération des messages:\", error));\r\n    }, [communityId]);\r\n\r\n    useEffect(() => {\r\n        fetchCommunityDetails();\r\n        fetchMembers();\r\n        fetchMessages();\r\n    }, [fetchCommunityDetails, fetchMembers, fetchMessages]);\r\n\r\n    // Fonction pour envoyer un nouveau message\r\n    const handleSendMessage = () => {\r\n        if (newMessage.trim() === '') return;\r\n\r\n        console.log(`[LOG] Envoi d'un message dans la communauté ID : ${communityId}`);\r\n        axios.post(`${apiUrl}/api/communities/${communityId}/messages`, {\r\n            content: newMessage,\r\n            user_id: userId,\r\n        })\r\n            .then(response => {\r\n                console.log(\"[LOG] Message envoyé avec succès :\", response.data);\r\n                setMessages([...messages, response.data]);\r\n                setNewMessage('');\r\n            })\r\n            .catch(error => console.error(\"[ERREUR] Erreur lors de l'envoi du message:\", error));\r\n    };\r\n\r\n    // Fonction pour gérer le téléchargement de la photo de profil\r\n    const handleProfilePhotoUpload = () => {\r\n        if (!communityId) {\r\n            console.error(\"[ERREUR] L'ID de la communauté est manquant lors du téléchargement de la photo.\");\r\n            return;\r\n        }\r\n\r\n        if (!profilePhoto) {\r\n            console.error(\"[ERREUR] Aucune photo sélectionnée pour le téléchargement.\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('profilePhoto', profilePhoto);\r\n\r\n        console.log(`[LOG] Début du téléchargement de la photo de profil pour la communauté ID : ${communityId}`);\r\n        axios.post(`${apiUrl}/api/communities/${communityId}/upload`, formData, {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        })\r\n        .then((response) => {\r\n            console.log(\"[LOG] Photo de profil mise à jour avec succès :\", response.data);\r\n            alert('Photo de profil mise à jour');\r\n            setProfilePhoto(null);\r\n            fetchCommunityDetails(); // Recharge les détails de la communauté pour afficher la nouvelle photo\r\n        })\r\n        .catch(error => {\r\n            console.error(\"[ERREUR] Erreur lors du téléchargement de la photo de profil:\", error);\r\n            alert('Erreur lors du téléchargement de la photo de profil.');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>{community.name || 'Chargement...'}</h2>\r\n            <p>{community.description || 'Description non disponible.'}</p>\r\n\r\n            {/* Affichage de la photo de profil actuelle */}\r\n            <div>\r\n                <label>Photo de profil actuelle :</label>\r\n                {community.profile_photo ? (\r\n                    \r\n                    <img\r\n    src={`${apiUrl}${community.profile_photo}`}\r\n    alt=\"Profil de la communauté\"\r\n    style={{ width: '100px', height: '100px', borderRadius: '50%' }}\r\n/>\r\n\r\n                ) : (\r\n                    <p>Aucune photo de profil disponible</p>\r\n                )}\r\n            </div>\r\n\r\n            {/* Changer la photo de profil */}\r\n            <div>\r\n                <label>Changer la photo de profil:</label>\r\n                <input type=\"file\" onChange={(e) => {\r\n                    console.log(\"[LOG] Photo sélectionnée :\", e.target.files[0]);\r\n                    setProfilePhoto(e.target.files[0]);\r\n                }} />\r\n                <button onClick={handleProfilePhotoUpload}>Télécharger la nouvelle photo</button>\r\n            </div>\r\n\r\n            {/* Affichage des membres */}\r\n            <h3>Membres :</h3>\r\n            <ul>\r\n                {members.length > 0 ? (\r\n                    members.map((member, index) => (\r\n                        <li key={index}>{member.username}</li>\r\n                    ))\r\n                ) : (\r\n                    <p>Aucun membre pour le moment.</p>\r\n                )}\r\n            </ul>\r\n\r\n            {/* Section de discussion */}\r\n            <h3>Discussions :</h3>\r\n            <div className=\"messages\">\r\n                {messages.length > 0 ? (\r\n                    messages.map((message, index) => (\r\n                        <div key={index} className=\"message\">\r\n                            <strong>{message.username}:</strong> {message.content}\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>Aucun message pour le moment.</p>\r\n                )}\r\n            </div>\r\n\r\n            {/* Champ pour envoyer un message */}\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Écrire un message...\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n            />\r\n            <button onClick={handleSendMessage}>Envoyer</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Communities;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
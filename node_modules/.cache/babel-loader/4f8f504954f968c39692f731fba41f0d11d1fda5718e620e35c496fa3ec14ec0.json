{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mambo\\\\Downloads\\\\ONVM\\\\frontend\\\\src\\\\components\\\\profile.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './Profile.css';\nimport { FaVideo, FaComment, FaShare, FaRetweet, FaWallet } from 'react-icons/fa'; // Ajout de l'icône de portefeuille\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\nimport BottomNav from './BottomNav';\nimport { FaHome, FaSearch, FaPlus, FaBell, FaUser } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiUrl = process.env.REACT_APP_API_URL;\nconsole.log(\"API URL utilisée :\", apiUrl);\nconst Profile = ({\n  currentUser\n}) => {\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [profileUser, setProfileUser] = useState(null);\n  const [bio, setBio] = useState('Bienvenue sur mon profil!');\n  const [followerCount, setFollowerCount] = useState(0);\n  const [posts, setPosts] = useState([]);\n  const [retweets, setRetweets] = useState([]);\n  const [isOwner, setIsOwner] = useState(false);\n  const [isFollowing, setIsFollowing] = useState(false);\n  const [newProfileImage, setNewProfileImage] = useState(null);\n  const [cropper, setCropper] = useState(null);\n  const [comments, setComments] = useState({});\n  const [activeComments, setActiveComments] = useState({});\n  const [newComment, setNewComment] = useState('');\n  const [balance, setBalance] = useState(0);\n  const [transactions, setTransactions] = useState([]);\n  const [extraData, setExtraData] = useState(null); // Ajoutez cet état pour stocker les données supplémentaires\n  const [response, setResponse] = useState(null);\n  const [activeTab, setActiveTab] = useState('publications'); // Onglet actif : 'publications' ou 'retweets'\n  const [showBottomNav, setShowBottomNav] = useState(true); // Par défaut, la barre est visible\n  const [isCreating, setIsCreating] = useState(false);\n\n  // Portefeuille - Handle withdrawal action\n  const handleWithdraw = () => {\n    if (balance === 0) {\n      alert(\"Votre portefeuille est vide.\");\n    } else {\n      alert(\"Fonction de retrait indisponible pour l'instant.\");\n    }\n  };\n  const fetchProfileData = useCallback(async () => {\n    try {\n      const res = await fetch(`${apiUrl}/api/users/${id}`);\n      if (!res.ok) throw new Error('Erreur lors de la récupération des données utilisateur.');\n      const data = await res.json();\n      setProfileUser(data);\n      setBio(data.bio || 'Bienvenue sur mon profil!');\n      setIsOwner(currentUser && currentUser.id === parseInt(id)); // Utilisation de setIsOwner\n      setResponse(data); // Met à jour response avec les données reçues\n\n      const [followerResponse, postsResponse, retweetsResponse, isFollowingResponse] = await Promise.all([fetch(`${apiUrl}/api/users/${id}/followers`), fetch(`${apiUrl}/api/users/${id}/publications`), fetch(`${apiUrl}/api/users/${id}/retweets`), fetch(`${apiUrl}/api/users/${id}/is-following?followerId=${currentUser ? currentUser.id : null}`)]);\n      const [followerData, postsData, retweetsData, isFollowingData] = await Promise.all([followerResponse.json(), postsResponse.json(), retweetsResponse.json(), isFollowingResponse.json()]);\n      setFollowerCount(followerData.totalFollowers || 0);\n      setPosts(postsData);\n      setRetweets(retweetsData);\n      setIsFollowing(isFollowingData.isFollowing);\n    } catch (error) {\n      console.error('[ERREUR] Erreur lors de la récupération du profil:', error);\n    }\n  }, [currentUser, id]); // Dépendances pour stabiliser la fonction\n\n  // Fonction `fetchWalletData` enveloppée avec `useCallback`\n  const fetchWalletData = useCallback(async () => {\n    try {\n      const responseBalance = await fetch(`${apiUrl}/api/wallet/${currentUser.id}/balance`);\n      if (!responseBalance.ok) {\n        throw new Error(`Erreur ${responseBalance.status} lors de la récupération du solde`);\n      }\n      const balanceData = await responseBalance.json();\n      setBalance(balanceData.balance || 0);\n      console.log(`[INFO] Solde récupéré: ${balanceData.balance || 0}`);\n      const responseTransactions = await fetch(`${apiUrl}/api/wallet/${currentUser.id}/history`);\n      if (!responseTransactions.ok) {\n        throw new Error(`Erreur ${responseTransactions.status} lors de la récupération des transactions`);\n      }\n      const transactionsData = await responseTransactions.json();\n      setTransactions(transactionsData.transactions || []);\n      console.log(`[INFO] Historique des transactions récupéré:`, transactionsData.transactions || []);\n    } catch (error) {\n      console.error('[ERREUR] Erreur lors de la récupération des données de portefeuille :', error);\n    }\n  }, [currentUser.id]);\n\n  // Handle file change for profile picture\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => setNewProfileImage(reader.result);\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Save the cropped profile image\n  const handleProfileImageSave = async () => {\n    if (!newProfileImage || !cropper) return;\n    cropper.getCroppedCanvas().toBlob(async blob => {\n      const formData = new FormData();\n      formData.append('profilePicture', blob, 'profile-picture.png');\n      try {\n        const response = await fetch(`${apiUrl}/api/users/${id}/profile-picture`, {\n          method: 'PUT',\n          body: formData\n        });\n        if (response.ok) {\n          alert('Photo de profil mise à jour avec succès!');\n          setNewProfileImage(null); // Reset the profile image after saving\n          setCropper(null); // Reset the cropper instance\n          fetchProfileData(); // Refresh profile data\n        } else {\n          alert('Erreur lors de la mise à jour de la photo de profil.');\n        }\n      } catch (error) {\n        console.error('[ERREUR] Erreur lors de la mise à jour de la photo de profil:', error);\n      }\n    });\n  };\n\n  // Fonction pour gérer les retweets\n\n  const handleRetweet = async postId => {\n    try {\n      const response = await fetch(`${apiUrl}/api/publications/${postId}/retweet`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: currentUser.id\n        })\n      });\n      if (response.ok) {\n        alert(\"Publication retweetée avec succès !\");\n        fetchProfileData(); // Rafraîchir les données de profil\n      } else {\n        alert(\"Erreur lors du retweet de la publication.\");\n      }\n    } catch (error) {\n      console.error('[ERREUR] Erreur lors du retweet :', error);\n    }\n  };\n  const handleDeletePost = async postId => {\n    try {\n      const response = await fetch(`${apiUrl}/api/publications/${postId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        alert('Publication supprimée avec succès!');\n        setPosts(prevPosts => prevPosts.filter(post => post.id !== postId));\n      } else {\n        alert(\"Erreur lors de la suppression de la publication.\");\n      }\n    } catch (error) {\n      console.error('[ERREUR] Erreur lors de la suppression de la publication :', error);\n    }\n  };\n  const handleDeleteRetweet = async publicationId => {\n    try {\n      const response = await fetch(`${apiUrl}/api/retweets/${publicationId}/${currentUser.id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        alert('Retweet supprimé avec succès!');\n        setRetweets(prevRetweets => prevRetweets.filter(r => r.id !== publicationId));\n      } else {\n        alert(\"Erreur lors de la suppression du retweet.\");\n      }\n    } catch (error) {\n      console.error('[ERREUR] Erreur lors de la suppression du retweet :', error);\n    }\n  };\n\n  // Handle follow/unfollow action\n  const handleFollow = async () => {\n    try {\n      const url = isFollowing ? '/unfollow' : '/follow';\n      const response = await fetch(`${apiUrl}/api/users${url}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          followerId: currentUser.id,\n          followingId: profileUser.id\n        })\n      });\n      if (response.ok) {\n        setFollowerCount(prevCount => isFollowing ? prevCount - 1 : prevCount + 1);\n        setIsFollowing(!isFollowing);\n        console.log(\"Action de suivi réussie :\", await response.json()); // Affiche les détails de la réponse\n      } else {\n        console.error(\"Erreur lors de l'action de suivi :\", await response.json());\n      }\n    } catch (error) {\n      console.error('[ERREUR] Erreur lors du suivi:', error);\n    }\n  };\n\n  // Save biography\n  const handleBioSave = async () => {\n    try {\n      const response = await fetch(`${apiUrl}/api/users/${id}/bio`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          bio\n        })\n      });\n      if (response.ok) {\n        alert('Biographie mise à jour avec succès!');\n      } else {\n        alert('Erreur lors de la mise à jour de la biographie.');\n      }\n    } catch (error) {\n      console.error('[ERREUR] Erreur lors de l\\'enregistrement de la biographie:', error);\n    }\n  };\n\n  // Handle comments for a post\n  const handleComment = async (postId, comment) => {\n    if (!comment.trim()) {\n      alert(\"Le commentaire ne peut pas être vide.\");\n      return;\n    }\n    try {\n      await fetch(`${apiUrl}/api/publications/${postId}/comment`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: currentUser.id,\n          comment\n        })\n      });\n      fetchProfileData(); // Refresh profile data after adding comment\n    } catch (error) {\n      console.error('[ERREUR] Erreur lors du commentaire:', error);\n    }\n  };\n\n  // Share a post\n  const handleShare = postId => {\n    alert(`Publication partagée : ${postId}`);\n  };\n\n  // Fetch comments for a post\n  const fetchComments = async postId => {\n    try {\n      const response = await fetch(`${apiUrl}/api/publications/${postId}/comments`);\n      const data = await response.json();\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: data\n      }));\n      setActiveComments(prev => ({\n        ...prev,\n        [postId]: !prev[postId]\n      }));\n    } catch (error) {\n      console.error('[ERREUR] Erreur lors de la récupération des commentaires:', error);\n    }\n  };\n  const fetchExtraProfileData = useCallback(async () => {\n    try {\n      const res = await fetch(`${apiUrl}/api/users/${id}/extra-data`);\n      if (!res.ok) throw new Error(\"Erreur lors de la récupération des données supplémentaires\");\n      const data = await res.json();\n      setExtraData(data);\n      console.log(data);\n    } catch (error) {\n      console.error(\"[ERREUR] Erreur lors de la récupération des données supplémentaires:\", error);\n    }\n  }, [id]);\n\n  // Chargement des données utilisateur et portefeuille\n  useEffect(() => {\n    if (!currentUser) {\n      console.warn(\"[AVERTISSEMENT] Aucun utilisateur connecté.\");\n      return;\n    }\n    console.log(\"[INFO] Chargement des données du profil...\");\n    Promise.all([fetchProfileData(), fetchExtraProfileData(), fetchWalletData()]).then(() => console.log(\"[SUCCÈS] Toutes les données utilisateur ont été chargées.\")).catch(error => console.error(\"[ERREUR] Problème lors du chargement des données utilisateur :\", error));\n  }, [currentUser, fetchProfileData, fetchExtraProfileData, fetchWalletData]);\n\n  // Affichage conditionnel de BottomNav en fonction de l'onglet actif\n  useEffect(() => {\n    if (activeTab === \"retweets\") {\n      setShowBottomNav(false); // Masque la barre de navigation\n    } else {\n      setShowBottomNav(true); // Affiche la barre de navigation\n    }\n  }, [activeTab]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [profileUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: profileUser.profilePicture ? `${apiUrl}${profileUser.profilePicture}` : '/images/default-profile.png' // Chemin de l'image par défaut\n          ,\n          alt: \"Profile\",\n          className: \"profile-picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: (profileUser === null || profileUser === void 0 ? void 0 : profileUser.username) || 'Nom indisponible'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), isOwner && /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Modifier le profil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: followerCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this), \" abonn\\xE9s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), isOwner ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this), newProfileImage && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Cropper, {\n                src: newProfileImage,\n                style: {\n                  height: 200,\n                  width: '100%'\n                },\n                aspectRatio: 1,\n                guides: false,\n                viewMode: 1,\n                minCropBoxHeight: 10,\n                minCropBoxWidth: 10,\n                background: false,\n                responsive: true,\n                autoCropArea: 1,\n                checkOrientation: false,\n                onInitialized: instance => setCropper(instance)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleProfileImageSave,\n                children: \"Confirmer la nouvelle photo de profil\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFollow,\n            children: isFollowing ? 'Se désabonner' : 'Suivre'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'publications' ? 'active' : ''}`,\n          onClick: () => setActiveTab('publications'),\n          children: \"Mes Publications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'retweets' ? 'active' : ''}`,\n          onClick: () => setActiveTab('retweets'),\n          children: \"Mes Retweets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-bio\",\n        children: isOwner ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: bio,\n            onChange: e => setBio(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleBioSave,\n            children: \"Enregistrer la bio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: profileUser.bio || 'Cet utilisateur n\\'a pas encore de biographie.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Donn\\xE9es suppl\\xE9mentaires :\", extraData && typeof extraData === 'object' ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(extraData).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [key, \" :\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 21\n            }, this), \" \", value]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 15\n        }, this) : 'Aucune donnée']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"D\\xE9tails du Profil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 3\n        }, this), response && /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            whiteSpace: 'pre-wrap',\n            wordBreak: 'break-word'\n          },\n          children: JSON.stringify(response, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-history\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Historique des Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), transactions.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [transaction.type === 'earn' ? 'Gagné' : 'Dépensé', \" : \", transaction.amount, \" ONVM Coins le\", ' ', new Date(transaction.date).toLocaleDateString()]\n          }, transaction.transactionId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Aucune transaction pour le moment.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-section\",\n        children: [/*#__PURE__*/_jsxDEV(FaWallet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 3\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Solde: \", balance, \" ONVM Coins\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }, this), isOwner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button live-button\",\n          onClick: () => navigate('/live'),\n          children: [/*#__PURE__*/_jsxDEV(FaVideo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 17\n          }, this), \" D\\xE9marrer un Live\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button withdraw-button\",\n          onClick: handleWithdraw,\n          children: \"Retirer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 13\n      }, this), posts.length > 0 ? posts.map(post => {\n        var _comments$post$id, _comments$post$id2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-post\",\n          children: [post.media ? post.media.endsWith('.mp4') ? /*#__PURE__*/_jsxDEV(\"video\", {\n            src: `${apiUrl}${post.media}`,\n            controls: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${apiUrl}${post.media}`,\n            alt: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDeleteRetweet(post.id),\n            title: \"Supprimer ce retweet\",\n            children: \"\\u2716\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDeletePost(post.id),\n            title: \"Supprimer cette publication\",\n            children: \"\\u2716\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fetchComments(post.id),\n              children: [/*#__PURE__*/_jsxDEV(FaComment, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 21\n              }, this), \" \", ((_comments$post$id = comments[post.id]) === null || _comments$post$id === void 0 ? void 0 : _comments$post$id.length) || 0, \" Commentaires\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleShare(post.id),\n              children: [/*#__PURE__*/_jsxDEV(FaShare, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 21\n              }, this), \" Partager\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRetweet(post.id),\n              children: [/*#__PURE__*/_jsxDEV(FaRetweet, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 21\n              }, this), \" Retweeter\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 17\n          }, this), activeComments[post.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comments-section\",\n            children: [(_comments$post$id2 = comments[post.id]) === null || _comments$post$id2 === void 0 ? void 0 : _comments$post$id2.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: comment.profilePicture ? `${apiUrl}${comment.profilePicture}` : '/default-profile.png',\n                alt: \"Profil\",\n                className: \"profile-picture-comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: comment.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 23\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-comment-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newComment,\n                onChange: e => setNewComment(e.target.value),\n                placeholder: \"Ajouter un commentaire...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleComment(post.id, newComment),\n                children: \"Envoyer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 19\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucune publication pour le moment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-button ${activeTab === 'publications' ? 'active' : ''}`,\n            onClick: () => setActiveTab('publications'),\n            children: \"Mes Publications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-button ${activeTab === 'retweets' ? 'active' : ''}`,\n            onClick: () => setActiveTab('retweets'),\n            children: \"Mes Retweets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 13\n        }, this), activeTab === 'publications' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Mes publications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 17\n          }, this), posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-post\",\n            children: post.media ? post.media.endsWith('.mp4') ? /*#__PURE__*/_jsxDEV(\"video\", {\n              src: `${apiUrl}${post.media}`,\n              controls: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${apiUrl}${post.media}`,\n              alt: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 25\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 21\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Aucune publication pour le moment.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), activeTab === 'retweets' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"retweets-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Mes retweets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 5\n          }, this), retweets.length > 0 ? retweets.map(retweet => {\n            var _comments$retweet$id;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-post\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: () => handleDeleteRetweet(retweet.id),\n                title: \"Supprimer ce retweet\",\n                children: \"\\u2716\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: retweet.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => fetchComments(retweet.id),\n                  children: [/*#__PURE__*/_jsxDEV(FaComment, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 15\n                  }, this), \" \", ((_comments$retweet$id = comments[retweet.id]) === null || _comments$retweet$id === void 0 ? void 0 : _comments$retweet$id.length) || 0, \" Commentaires\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleShare(retweet.id),\n                  children: [/*#__PURE__*/_jsxDEV(FaShare, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 621,\n                    columnNumber: 15\n                  }, this), \" Partager\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleRetweet(retweet.id),\n                  children: [/*#__PURE__*/_jsxDEV(FaRetweet, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 624,\n                    columnNumber: 15\n                  }, this), \" \", retweets.length, \" Retweets\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: [\"\\u2764\\uFE0F \", retweet.likes || 0, \" Likes\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 11\n              }, this)]\n            }, retweet.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 9\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Aucun retweet pour le moment.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `bottom-nav ${showBottomNav ? 'visible' : 'hidden'}`,\n      children: [/*#__PURE__*/_jsxDEV(FaHome, {\n        onClick: () => navigate('/'),\n        title: \"Accueil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(FaSearch, {\n        onClick: () => navigate('/search'),\n        title: \"Recherche\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-post-section\",\n        children: [/*#__PURE__*/_jsxDEV(FaPlus, {\n          onClick: () => setIsCreating(prev => !prev),\n          title: \"Cr\\xE9er une publication\",\n          className: \"create-post-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 5\n        }, this), isCreating && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"creating-text\",\n          children: \"Cr\\xE9ation en cours...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(FaBell, {\n        onClick: () => navigate('/notifications'),\n        title: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(FaUser, {\n        onClick: () => navigate(`/profile/${currentUser === null || currentUser === void 0 ? void 0 : currentUser.id}`),\n        title: \"Mon profil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 1\n    }, this), showBottomNav && /*#__PURE__*/_jsxDEV(BottomNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"scroll-to-top\",\n      onClick: () => window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      }),\n      children: \"\\u2B06\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n};\nexport default Profile;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useParams","FaVideo","FaComment","FaShare","FaRetweet","FaWallet","Cropper","BottomNav","FaHome","FaSearch","FaPlus","FaBell","FaUser","jsxDEV","_jsxDEV","Fragment","_Fragment","apiUrl","process","env","REACT_APP_API_URL","console","log","Profile","currentUser","id","navigate","profileUser","setProfileUser","bio","setBio","followerCount","setFollowerCount","posts","setPosts","retweets","setRetweets","isOwner","setIsOwner","isFollowing","setIsFollowing","newProfileImage","setNewProfileImage","cropper","setCropper","comments","setComments","activeComments","setActiveComments","newComment","setNewComment","balance","setBalance","transactions","setTransactions","extraData","setExtraData","response","setResponse","activeTab","setActiveTab","showBottomNav","setShowBottomNav","isCreating","setIsCreating","handleWithdraw","alert","fetchProfileData","res","fetch","ok","Error","data","json","parseInt","followerResponse","postsResponse","retweetsResponse","isFollowingResponse","Promise","all","followerData","postsData","retweetsData","isFollowingData","totalFollowers","error","fetchWalletData","responseBalance","status","balanceData","responseTransactions","transactionsData","handleFileChange","e","file","target","files","reader","FileReader","onload","result","readAsDataURL","handleProfileImageSave","getCroppedCanvas","toBlob","blob","formData","FormData","append","method","body","handleRetweet","postId","headers","JSON","stringify","userId","handleDeletePost","prevPosts","filter","post","handleDeleteRetweet","publicationId","prevRetweets","r","handleFollow","url","followerId","followingId","prevCount","handleBioSave","handleComment","comment","trim","handleShare","fetchComments","prevComments","prev","fetchExtraProfileData","warn","then","catch","className","children","src","profilePicture","alt","fileName","_jsxFileName","lineNumber","columnNumber","username","type","onChange","style","height","width","aspectRatio","guides","viewMode","minCropBoxHeight","minCropBoxWidth","background","responsive","autoCropArea","checkOrientation","onInitialized","instance","onClick","value","Object","entries","map","key","whiteSpace","wordBreak","length","transaction","amount","Date","date","toLocaleDateString","transactionId","_comments$post$id","_comments$post$id2","media","endsWith","controls","content","title","index","placeholder","retweet","_comments$retweet$id","likes","window","scrollTo","top","behavior"],"sources":["C:/Users/mambo/Downloads/ONVM/frontend/src/components/profile.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './Profile.css';\r\nimport { FaVideo, FaComment, FaShare, FaRetweet, FaWallet } from 'react-icons/fa'; // Ajout de l'icône de portefeuille\r\nimport Cropper from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport BottomNav from './BottomNav';\r\nimport { FaHome, FaSearch, FaPlus, FaBell, FaUser } from 'react-icons/fa';\r\n\r\n\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\n\r\nconsole.log(\"API URL utilisée :\", apiUrl);\r\n\r\n\r\n\r\n\r\nconst Profile = ({ currentUser }) => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [profileUser, setProfileUser] = useState(null);\r\n  const [bio, setBio] = useState('Bienvenue sur mon profil!');\r\n  const [followerCount, setFollowerCount] = useState(0);\r\n  const [posts, setPosts] = useState([]);\r\n  const [retweets, setRetweets] = useState([]);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n  const [isFollowing, setIsFollowing] = useState(false);\r\n  const [newProfileImage, setNewProfileImage] = useState(null);\r\n  const [cropper, setCropper] = useState(null);\r\n  const [comments, setComments] = useState({});\r\n  const [activeComments, setActiveComments] = useState({});\r\n  const [newComment, setNewComment] = useState('');\r\n  const [balance, setBalance] = useState(0);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [extraData, setExtraData] = useState(null); // Ajoutez cet état pour stocker les données supplémentaires\r\n  const [response, setResponse] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('publications'); // Onglet actif : 'publications' ou 'retweets'\r\n  const [showBottomNav, setShowBottomNav] = useState(true); // Par défaut, la barre est visible\r\n  const [isCreating, setIsCreating] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n  // Portefeuille - Handle withdrawal action\r\n  const handleWithdraw = () => {\r\n    if (balance === 0) {\r\n      alert(\"Votre portefeuille est vide.\");\r\n    } else {\r\n      alert(\"Fonction de retrait indisponible pour l'instant.\");\r\n    }\r\n  };\r\n\r\n  const fetchProfileData = useCallback(async () => {\r\n    try {\r\n      const res = await fetch(`${apiUrl}/api/users/${id}`);\r\n      if (!res.ok) throw new Error('Erreur lors de la récupération des données utilisateur.');\r\n      const data = await res.json();\r\n\r\n      setProfileUser(data);\r\n      setBio(data.bio || 'Bienvenue sur mon profil!');\r\n      setIsOwner(currentUser && currentUser.id === parseInt(id)); // Utilisation de setIsOwner\r\n      setResponse(data); // Met à jour response avec les données reçues\r\n\r\n      const [followerResponse, postsResponse, retweetsResponse, isFollowingResponse] = await Promise.all([\r\n        fetch(`${apiUrl}/api/users/${id}/followers`),\r\n        fetch(`${apiUrl}/api/users/${id}/publications`),\r\n        fetch(`${apiUrl}/api/users/${id}/retweets`),\r\n        fetch(`${apiUrl}/api/users/${id}/is-following?followerId=${currentUser ? currentUser.id : null}`)\r\n      ]);\r\n\r\n      const [followerData, postsData, retweetsData, isFollowingData] = await Promise.all([\r\n        followerResponse.json(),\r\n        postsResponse.json(),\r\n        retweetsResponse.json(),\r\n        isFollowingResponse.json()\r\n      ]);\r\n\r\n      setFollowerCount(followerData.totalFollowers || 0);\r\n      setPosts(postsData);\r\n      setRetweets(retweetsData);\r\n      setIsFollowing(isFollowingData.isFollowing);\r\n    } catch (error) {\r\n      console.error('[ERREUR] Erreur lors de la récupération du profil:', error);\r\n    }\r\n  }, [currentUser, id]); // Dépendances pour stabiliser la fonction\r\n\r\n\r\n  // Fonction `fetchWalletData` enveloppée avec `useCallback`\r\n  const fetchWalletData = useCallback(async () => {\r\n    try {\r\n      const responseBalance = await fetch(`${apiUrl}/api/wallet/${currentUser.id}/balance`);\r\n\r\n      if (!responseBalance.ok) {\r\n        throw new Error(`Erreur ${responseBalance.status} lors de la récupération du solde`);\r\n      }\r\n\r\n      const balanceData = await responseBalance.json();\r\n      setBalance(balanceData.balance || 0);\r\n      console.log(`[INFO] Solde récupéré: ${balanceData.balance || 0}`);\r\n\r\n      const responseTransactions = await fetch(`${apiUrl}/api/wallet/${currentUser.id}/history`);\r\n\r\n      if (!responseTransactions.ok) {\r\n        throw new Error(`Erreur ${responseTransactions.status} lors de la récupération des transactions`);\r\n      }\r\n\r\n      const transactionsData = await responseTransactions.json();\r\n      setTransactions(transactionsData.transactions || []);\r\n      console.log(`[INFO] Historique des transactions récupéré:`, transactionsData.transactions || []);\r\n\r\n    } catch (error) {\r\n      console.error('[ERREUR] Erreur lors de la récupération des données de portefeuille :', error);\r\n    }\r\n  }, [currentUser.id,]);\r\n\r\n\r\n\r\n  // Handle file change for profile picture\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = () => setNewProfileImage(reader.result);\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  // Save the cropped profile image\r\n  const handleProfileImageSave = async () => {\r\n    if (!newProfileImage || !cropper) return;\r\n\r\n    cropper.getCroppedCanvas().toBlob(async (blob) => {\r\n      const formData = new FormData();\r\n      formData.append('profilePicture', blob, 'profile-picture.png');\r\n\r\n      try {\r\n        const response = await fetch(`${apiUrl}/api/users/${id}/profile-picture`, {\r\n          method: 'PUT',\r\n          body: formData,\r\n        });\r\n\r\n        if (response.ok) {\r\n          alert('Photo de profil mise à jour avec succès!');\r\n          setNewProfileImage(null); // Reset the profile image after saving\r\n          setCropper(null); // Reset the cropper instance\r\n          fetchProfileData(); // Refresh profile data\r\n        } else {\r\n          alert('Erreur lors de la mise à jour de la photo de profil.');\r\n        }\r\n      } catch (error) {\r\n        console.error('[ERREUR] Erreur lors de la mise à jour de la photo de profil:', error);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  // Fonction pour gérer les retweets\r\n  \r\n    \r\n    \r\n\r\n  const handleRetweet = async (postId) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/api/publications/${postId}/retweet`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ userId: currentUser.id })\r\n      });\r\n  \r\n      if (response.ok) {\r\n        alert(\"Publication retweetée avec succès !\");\r\n        fetchProfileData(); // Rafraîchir les données de profil\r\n      } else {\r\n        alert(\"Erreur lors du retweet de la publication.\");\r\n      }\r\n    } catch (error) {\r\n      console.error('[ERREUR] Erreur lors du retweet :', error);\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  const handleDeletePost = async (postId) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/api/publications/${postId}`, {\r\n        method: 'DELETE',\r\n      });\r\n  \r\n      if (response.ok) {\r\n        alert('Publication supprimée avec succès!');\r\n        setPosts((prevPosts) => prevPosts.filter((post) => post.id !== postId));\r\n      } else {\r\n        alert(\"Erreur lors de la suppression de la publication.\");\r\n      }\r\n    } catch (error) {\r\n      console.error('[ERREUR] Erreur lors de la suppression de la publication :', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleDeleteRetweet = async (publicationId) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${apiUrl}/api/retweets/${publicationId}/${currentUser.id}`,\r\n        {\r\n          method: 'DELETE',\r\n        }\r\n      );\r\n  \r\n      if (response.ok) {\r\n        alert('Retweet supprimé avec succès!');\r\n        setRetweets((prevRetweets) => prevRetweets.filter((r) => r.id !== publicationId));\r\n\r\n      } else {\r\n        alert(\"Erreur lors de la suppression du retweet.\");\r\n      }\r\n    } catch (error) {\r\n      console.error('[ERREUR] Erreur lors de la suppression du retweet :', error);\r\n    }\r\n  };\r\n  \r\n\r\n  // Handle follow/unfollow action\r\n  const handleFollow = async () => {\r\n    try {\r\n      const url = isFollowing ? '/unfollow' : '/follow';\r\n      const response = await fetch(`${apiUrl}/api/users${url}`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ followerId: currentUser.id, followingId: profileUser.id })\r\n      });\r\n\r\n      if (response.ok) {\r\n        setFollowerCount((prevCount) => (isFollowing ? prevCount - 1 : prevCount + 1));\r\n        setIsFollowing(!isFollowing);\r\n        console.log(\"Action de suivi réussie :\", await response.json()); // Affiche les détails de la réponse\r\n      } else {\r\n        console.error(\"Erreur lors de l'action de suivi :\", await response.json());\r\n      }\r\n    } catch (error) {\r\n      console.error('[ERREUR] Erreur lors du suivi:', error);\r\n    }\r\n  };\r\n\r\n\r\n  // Save biography\r\n  const handleBioSave = async () => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/api/users/${id}/bio`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ bio })\r\n      });\r\n      if (response.ok) {\r\n        alert('Biographie mise à jour avec succès!');\r\n      } else {\r\n        alert('Erreur lors de la mise à jour de la biographie.');\r\n      }\r\n    } catch (error) {\r\n      console.error('[ERREUR] Erreur lors de l\\'enregistrement de la biographie:', error);\r\n    }\r\n  };\r\n\r\n  // Handle comments for a post\r\n  const handleComment = async (postId, comment) => {\r\n    if (!comment.trim()) {\r\n      alert(\"Le commentaire ne peut pas être vide.\");\r\n      return;\r\n    }\r\n    try {\r\n      await fetch(`${apiUrl}/api/publications/${postId}/comment`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ userId: currentUser.id, comment })\r\n      });\r\n      fetchProfileData(); // Refresh profile data after adding comment\r\n    } catch (error) {\r\n      console.error('[ERREUR] Erreur lors du commentaire:', error);\r\n    }\r\n  };\r\n\r\n  // Share a post\r\n  const handleShare = (postId) => {\r\n    alert(`Publication partagée : ${postId}`);\r\n  };\r\n\r\n  // Fetch comments for a post\r\n  const fetchComments = async (postId) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/api/publications/${postId}/comments`);\r\n      const data = await response.json();\r\n      setComments((prevComments) => ({\r\n        ...prevComments,\r\n        [postId]: data,\r\n      }));\r\n      setActiveComments((prev) => ({\r\n        ...prev,\r\n        [postId]: !prev[postId],\r\n      }));\r\n    } catch (error) {\r\n      console.error('[ERREUR] Erreur lors de la récupération des commentaires:', error);\r\n    }\r\n  };\r\n\r\n  const fetchExtraProfileData = useCallback(async () => {\r\n    try {\r\n      const res = await fetch(`${apiUrl}/api/users/${id}/extra-data`);\r\n      if (!res.ok) throw new Error(\"Erreur lors de la récupération des données supplémentaires\");\r\n\r\n      const data = await res.json();\r\n      setExtraData(data);\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.error(\"[ERREUR] Erreur lors de la récupération des données supplémentaires:\", error);\r\n    }\r\n  }, [id]);\r\n\r\n// Chargement des données utilisateur et portefeuille\r\nuseEffect(() => {\r\n  if (!currentUser) {\r\n    console.warn(\"[AVERTISSEMENT] Aucun utilisateur connecté.\");\r\n    return;\r\n  }\r\n\r\n  console.log(\"[INFO] Chargement des données du profil...\");\r\n  \r\n  Promise.all([\r\n    fetchProfileData(),\r\n    fetchExtraProfileData(),\r\n    fetchWalletData(),\r\n  ])\r\n    .then(() => console.log(\"[SUCCÈS] Toutes les données utilisateur ont été chargées.\"))\r\n    .catch((error) => console.error(\"[ERREUR] Problème lors du chargement des données utilisateur :\", error));\r\n}, [currentUser, fetchProfileData, fetchExtraProfileData, fetchWalletData]);\r\n\r\n\r\n// Affichage conditionnel de BottomNav en fonction de l'onglet actif\r\nuseEffect(() => {\r\n  if (activeTab === \"retweets\") {\r\n    setShowBottomNav(false); // Masque la barre de navigation\r\n  } else {\r\n    setShowBottomNav(true); // Affiche la barre de navigation\r\n  }\r\n}, [activeTab]);\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      {profileUser ? (\r\n        <>\r\n               <div className=\"profile-header\">\r\n  <img\r\n    src={\r\n      profileUser.profilePicture\r\n    \r\n        ? `${apiUrl}${profileUser.profilePicture}`\r\n        : '/images/default-profile.png' // Chemin de l'image par défaut\r\n    }\r\n    alt=\"Profile\"\r\n    className=\"profile-picture\"\r\n  />\r\n\r\n\r\n            <div className=\"profile-info\">\r\n              <h2>{profileUser?.username || 'Nom indisponible'}</h2>\r\n  \r\n              {isOwner && <button>Modifier le profil</button>}\r\n  \r\n              <p>\r\n                <strong>{followerCount}</strong> abonnés\r\n              </p>\r\n  \r\n              {isOwner ? (\r\n                <>\r\n                  <input type=\"file\" onChange={handleFileChange} />\r\n                  {newProfileImage && (\r\n                    <div>\r\n                      <Cropper\r\n                        src={newProfileImage}\r\n                        style={{ height: 200, width: '100%' }}\r\n                        aspectRatio={1}\r\n                        guides={false}\r\n                        viewMode={1}\r\n                        minCropBoxHeight={10}\r\n                        minCropBoxWidth={10}\r\n                        background={false}\r\n                        responsive={true}\r\n                        autoCropArea={1}\r\n                        checkOrientation={false}\r\n                        onInitialized={(instance) => setCropper(instance)}\r\n                      />\r\n                      <button onClick={handleProfileImageSave}>Confirmer la nouvelle photo de profil</button>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <button onClick={handleFollow}>{isFollowing ? 'Se désabonner' : 'Suivre'}</button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"profile-tabs\">\r\n  <button\r\n    className={`tab-button ${activeTab === 'publications' ? 'active' : ''}`}\r\n    onClick={() => setActiveTab('publications')}\r\n  >\r\n    Mes Publications\r\n  </button>\r\n  <button\r\n    className={`tab-button ${activeTab === 'retweets' ? 'active' : ''}`}\r\n    onClick={() => setActiveTab('retweets')}\r\n  >\r\n    Mes Retweets\r\n  </button>\r\n</div>\r\n\r\n  \r\n          <div className=\"profile-bio\">\r\n            {isOwner ? (\r\n              <>\r\n                <textarea value={bio} onChange={(e) => setBio(e.target.value)} />\r\n                <button onClick={handleBioSave}>Enregistrer la bio</button>\r\n              </>\r\n            ) : (\r\n              <p>{profileUser.bio || 'Cet utilisateur n\\'a pas encore de biographie.'}</p>\r\n            )}\r\n          </div>\r\n  \r\n          <div>\r\n            Données supplémentaires :\r\n            {extraData && typeof extraData === 'object' ? (\r\n              <ul>\r\n                {Object.entries(extraData).map(([key, value]) => (\r\n                  <li key={key}>\r\n                    <strong>{key} :</strong> {value}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              'Aucune donnée'\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n  <h3>Détails du Profil</h3>\r\n  {response && (\r\n    <pre style={{ whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>\r\n      {JSON.stringify(response, null, 2)}\r\n    </pre>\r\n  )}\r\n</div>\r\n\r\n  \r\n          <div className=\"transaction-history\">\r\n            <h3>Historique des Transactions</h3>\r\n            {transactions.length > 0 ? (\r\n              <ul>\r\n                {transactions.map((transaction) => (\r\n                  <li key={transaction.transactionId}>\r\n                    {transaction.type === 'earn' ? 'Gagné' : 'Dépensé'} : {transaction.amount} ONVM Coins le{' '}\r\n                    {new Date(transaction.date).toLocaleDateString()}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>Aucune transaction pour le moment.</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"wallet-section\">\r\n  <FaWallet /> <span>Solde: {balance} ONVM Coins</span>\r\n</div>\r\n\r\n  \r\n          {isOwner && (\r\n            <div className=\"actions-section\">\r\n              <button className=\"action-button live-button\" onClick={() => navigate('/live')}>\r\n                <FaVideo /> Démarrer un Live\r\n              </button>\r\n              <button className=\"action-button withdraw-button\" onClick={handleWithdraw}>\r\n                Retirer\r\n              </button>\r\n            </div>\r\n          )}\r\n  \r\n          {posts.length > 0 ? (\r\n            posts.map((post) => (\r\n              <div key={post.id} className=\"profile-post\">\r\n                {post.media ? (\r\n                  post.media.endsWith('.mp4') ? (\r\n                    <video src={`${apiUrl}${post.media}`} controls />\r\n                  ) : (\r\n                    <img src={`${apiUrl}${post.media}`} alt={post.content} />\r\n                  )\r\n                ) : (\r\n                  <p>{post.content}</p>\r\n                )}\r\n<button\r\n  className=\"delete-button\"\r\n  onClick={() => handleDeleteRetweet(post.id)}\r\n  title=\"Supprimer ce retweet\"\r\n>\r\n  ✖\r\n</button>\r\n\r\n\r\n<button\r\n  className=\"delete-button\"\r\n  onClick={() => handleDeletePost(post.id)}\r\n  title=\"Supprimer cette publication\"\r\n>\r\n  ✖\r\n</button>\r\n\r\n\r\n\r\n                <div className=\"post-actions\">\r\n                  <button onClick={() => fetchComments(post.id)}>\r\n                    <FaComment /> {comments[post.id]?.length || 0} Commentaires\r\n                  </button>\r\n                  <button onClick={() => handleShare(post.id)}>\r\n                    <FaShare /> Partager\r\n                  </button>\r\n                  <button onClick={() => handleRetweet(post.id)}>\r\n                    <FaRetweet /> Retweeter\r\n                  </button>\r\n                </div>\r\n  \r\n                {activeComments[post.id] && (\r\n                  <div className=\"comments-section\">\r\n                    {comments[post.id]?.map((comment, index) => (\r\n                      <div key={index} className=\"comment\">\r\n                        <img\r\n                          src={comment.profilePicture ? `${apiUrl}${comment.profilePicture}` : '/default-profile.png'}\r\n                          alt=\"Profil\"\r\n                          className=\"profile-picture-comment\"\r\n                        />\r\n                        <strong>{comment.username}</strong>\r\n                        <p>{comment.comment}</p>\r\n                      </div>\r\n                    ))}\r\n                    <div className=\"add-comment-section\">\r\n                      <input\r\n                        type=\"text\"\r\n                        value={newComment}\r\n                        onChange={(e) => setNewComment(e.target.value)}\r\n                        placeholder=\"Ajouter un commentaire...\"\r\n                      />\r\n                      <button onClick={() => handleComment(post.id, newComment)}>Envoyer</button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>Aucune publication pour le moment.</p>\r\n          )}\r\n  \r\n          <div className=\"profile-grid\">\r\n            <div className=\"tabs\">\r\n              <button\r\n                className={`tab-button ${activeTab === 'publications' ? 'active' : ''}`}\r\n                onClick={() => setActiveTab('publications')}\r\n              >\r\n                Mes Publications\r\n              </button>\r\n              <button\r\n                className={`tab-button ${activeTab === 'retweets' ? 'active' : ''}`}\r\n                onClick={() => setActiveTab('retweets')}\r\n              >\r\n                Mes Retweets\r\n              </button>\r\n            </div>\r\n  \r\n            {activeTab === 'publications' && (\r\n              <>\r\n                <h3>Mes publications</h3>\r\n                {posts.length > 0 ? (\r\n                  posts.map((post) => (\r\n                    <div key={post.id} className=\"profile-post\">\r\n                      {post.media ? (\r\n                        post.media.endsWith('.mp4') ? (\r\n                          <video src={`${apiUrl}${post.media}`} controls />\r\n                        ) : (\r\n                          <img src={`${apiUrl}${post.media}`} alt={post.content} />\r\n                        )\r\n                      ) : (\r\n                        <p>{post.content}</p>\r\n                      )}\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p>Aucune publication pour le moment.</p>\r\n                )}\r\n              </>\r\n            )}\r\n  \r\n  {activeTab === 'retweets' && (\r\n  <div className=\"retweets-section\">\r\n    <h3>Mes retweets</h3>\r\n    {retweets.length > 0 ? (\r\n      retweets.map((retweet) => (\r\n        <div key={retweet.id} className=\"profile-post\">\r\n          {/* Bouton de suppression */}\r\n          <button\r\n            className=\"delete-button\"\r\n            onClick={() => handleDeleteRetweet(retweet.id)}\r\n            title=\"Supprimer ce retweet\"\r\n          >\r\n            ✖\r\n          </button>\r\n          <p>{retweet.content}</p>\r\n\r\n          <div className=\"post-actions\">\r\n            <button onClick={() => fetchComments(retweet.id)}>\r\n              <FaComment /> {comments[retweet.id]?.length || 0} Commentaires\r\n            </button>\r\n            <button onClick={() => handleShare(retweet.id)}>\r\n              <FaShare /> Partager\r\n            </button>\r\n            <button onClick={() => handleRetweet(retweet.id)}>\r\n              <FaRetweet /> {retweets.length} Retweets\r\n            </button>\r\n            <button>\r\n              ❤️ {retweet.likes || 0} Likes\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))\r\n    ) : (\r\n      <p>Aucun retweet pour le moment.</p>\r\n    )}\r\n  </div>\r\n)}\r\n\r\n\r\n{/* Fin de la condition activeTab === 'retweets' */}\r\n</div>\r\n\r\n{/* Fin du profil utilisateur */}\r\n</>\r\n) : (\r\n  <p>Chargement...</p>\r\n)}\r\n\r\n{/* Navigation en bas de page */}\r\n<div className={`bottom-nav ${showBottomNav ? 'visible' : 'hidden'}`}>\r\n\r\n  {/* Accueil */}\r\n  <FaHome onClick={() => navigate('/')} title=\"Accueil\" />\r\n\r\n  {/* Recherche */}\r\n  <FaSearch onClick={() => navigate('/search')} title=\"Recherche\" />\r\n\r\n  {/* Création de publication */}\r\n  <div className=\"create-post-section\">\r\n    <FaPlus\r\n      onClick={() => setIsCreating((prev) => !prev)}\r\n      title=\"Créer une publication\"\r\n      className=\"create-post-button\"\r\n    />\r\n    {isCreating && (\r\n      <p className=\"creating-text\">Création en cours...</p>\r\n    )}\r\n  </div>\r\n\r\n  {/* Notifications */}\r\n  <FaBell onClick={() => navigate('/notifications')} title=\"Notifications\" />\r\n\r\n  {/* Profil */}\r\n  <FaUser onClick={() => navigate(`/profile/${currentUser?.id}`)} title=\"Mon profil\" />\r\n\r\n</div>\r\n\r\n{/* Affichage conditionnel de BottomNav */}\r\n{showBottomNav && <BottomNav />}\r\n\r\n{/* Bouton retour en haut (utile sur mobile) */}\r\n<button className=\"scroll-to-top\" onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}>\r\n  ⬆️\r\n</button>\r\n\r\n</div>\r\n);\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
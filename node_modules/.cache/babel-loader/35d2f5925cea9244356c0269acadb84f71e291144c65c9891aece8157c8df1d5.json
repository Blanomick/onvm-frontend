{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import axios from'axios';import{useParams}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const apiUrl=process.env.REACT_APP_API_URL;console.log(\"API URL utilisée :\",apiUrl);function Communities(_ref){let{userId}=_ref;const{communityId}=useParams();const[community,setCommunity]=useState({});const[members,setMembers]=useState([]);const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');const[profilePhoto,setProfilePhoto]=useState(null);// Fonction pour récupérer les détails de la communauté\nconst fetchCommunityDetails=useCallback(()=>{if(!communityId){console.warn(\"[LOG] L'ID de la communauté est manquant.\");return;}console.log(`[LOG] Récupération des détails de la communauté avec ID : ${communityId}`);axios.get(`${apiUrl}/api/communities/${communityId}`).then(response=>{console.log(\"[LOG] Détails de la communauté récupérés :\",response.data);setCommunity(response.data);}).catch(error=>console.error(\"[ERREUR] Erreur lors de la récupération de la communauté:\",error));},[communityId]);// Fonction pour récupérer les membres de la communauté\nconst fetchMembers=useCallback(()=>{if(!communityId)return;console.log(`[LOG] Récupération des membres de la communauté avec ID : ${communityId}`);axios.get(`${apiUrl}/api/communities/${communityId}/members`).then(response=>{console.log(\"[LOG] Membres récupérés :\",response.data);setMembers(response.data);}).catch(error=>console.error(\"[ERREUR] Erreur lors de la récupération des membres:\",error));},[communityId]);// Fonction pour récupérer les messages de la communauté\nconst fetchMessages=useCallback(()=>{if(!communityId)return;console.log(`[LOG] Récupération des messages de la communauté avec ID : ${communityId}`);axios.get(`${apiUrl}/api/communities/${communityId}/messages`).then(response=>{console.log(\"[LOG] Messages récupérés :\",response.data);setMessages(response.data);}).catch(error=>console.error(\"[ERREUR] Erreur lors de la récupération des messages:\",error));},[communityId]);useEffect(()=>{fetchCommunityDetails();fetchMembers();fetchMessages();},[fetchCommunityDetails,fetchMembers,fetchMessages]);// Fonction pour envoyer un nouveau message\nconst handleSendMessage=()=>{if(newMessage.trim()==='')return;console.log(`[LOG] Envoi d'un message dans la communauté ID : ${communityId}`);axios.post(`${apiUrl}/api/communities/${communityId}/messages`,{content:newMessage,user_id:userId}).then(response=>{console.log(\"[LOG] Message envoyé avec succès :\",response.data);setMessages([...messages,response.data]);setNewMessage('');}).catch(error=>console.error(\"[ERREUR] Erreur lors de l'envoi du message:\",error));};// Fonction pour gérer le téléchargement de la photo de profil\nconst handleProfilePhotoUpload=()=>{if(!communityId){console.error(\"[ERREUR] L'ID de la communauté est manquant lors du téléchargement de la photo.\");return;}if(!profilePhoto){console.error(\"[ERREUR] Aucune photo sélectionnée pour le téléchargement.\");return;}const formData=new FormData();formData.append('profilePhoto',profilePhoto);console.log(`[LOG] Début du téléchargement de la photo de profil pour la communauté ID : ${communityId}`);axios.post(`${apiUrl}/api/communities/${communityId}/upload`,formData,{headers:{'Content-Type':'multipart/form-data'}}).then(response=>{console.log(\"[LOG] Photo de profil mise à jour avec succès :\",response.data);alert('Photo de profil mise à jour');setProfilePhoto(null);fetchCommunityDetails();// Recharge les détails de la communauté pour afficher la nouvelle photo\n}).catch(error=>{console.error(\"[ERREUR] Erreur lors du téléchargement de la photo de profil:\",error);alert('Erreur lors du téléchargement de la photo de profil.');});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:community.name||'Chargement...'}),/*#__PURE__*/_jsx(\"p\",{children:community.description||'Description non disponible.'}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Photo de profil actuelle :\"}),community.profile_photo?/*#__PURE__*/_jsx(\"img\",{src:`${apiUrl}${community.profile_photo}`,alt:\"Profil de la communaut\\xE9\",style:{width:'100px',height:'100px',borderRadius:'50%'}}):/*#__PURE__*/_jsx(\"p\",{children:\"Aucune photo de profil disponible\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Changer la photo de profil:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:e=>{console.log(\"[LOG] Photo sélectionnée :\",e.target.files[0]);setProfilePhoto(e.target.files[0]);}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleProfilePhotoUpload,children:\"T\\xE9l\\xE9charger la nouvelle photo\"})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Membres :\"}),/*#__PURE__*/_jsx(\"ul\",{children:members.length>0?members.map((member,index)=>/*#__PURE__*/_jsx(\"li\",{children:member.username},index)):/*#__PURE__*/_jsx(\"p\",{children:\"Aucun membre pour le moment.\"})}),/*#__PURE__*/_jsx(\"h3\",{children:\"Discussions :\"}),/*#__PURE__*/_jsx(\"div\",{className:\"messages\",children:messages.length>0?messages.map((message,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"message\",children:[/*#__PURE__*/_jsxs(\"strong\",{children:[message.username,\":\"]}),\" \",message.content]},index)):/*#__PURE__*/_jsx(\"p\",{children:\"Aucun message pour le moment.\"})}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\xC9crire un message...\",value:newMessage,onChange:e=>setNewMessage(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,children:\"Envoyer\"})]});}export default Communities;","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","useParams","jsx","_jsx","jsxs","_jsxs","apiUrl","process","env","REACT_APP_API_URL","console","log","Communities","_ref","userId","communityId","community","setCommunity","members","setMembers","messages","setMessages","newMessage","setNewMessage","profilePhoto","setProfilePhoto","fetchCommunityDetails","warn","get","then","response","data","catch","error","fetchMembers","fetchMessages","handleSendMessage","trim","post","content","user_id","handleProfilePhotoUpload","formData","FormData","append","headers","alert","children","name","description","profile_photo","src","alt","style","width","height","borderRadius","type","onChange","e","target","files","onClick","length","map","member","index","username","className","message","placeholder","value"],"sources":["C:/Users/mambo/Downloads/ONVM/frontend/src/components/Communities.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\n\r\nconsole.log(\"API URL utilisée :\", apiUrl);\r\n\r\n\r\n\r\nfunction Communities({ userId }) {\r\n    const { communityId } = useParams();\r\n    const [community, setCommunity] = useState({});\r\n    const [members, setMembers] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [profilePhoto, setProfilePhoto] = useState(null);\r\n\r\n    // Fonction pour récupérer les détails de la communauté\r\n    const fetchCommunityDetails = useCallback(() => {\r\n        if (!communityId) {\r\n            console.warn(\"[LOG] L'ID de la communauté est manquant.\");\r\n            return;\r\n        }\r\n        console.log(`[LOG] Récupération des détails de la communauté avec ID : ${communityId}`);\r\n\r\n        axios.get(`${apiUrl}/api/communities/${communityId}`)\r\n            .then(response => {\r\n                console.log(\"[LOG] Détails de la communauté récupérés :\", response.data);\r\n                setCommunity(response.data);\r\n            })\r\n            .catch(error => console.error(\"[ERREUR] Erreur lors de la récupération de la communauté:\", error));\r\n    }, [communityId]);\r\n\r\n    // Fonction pour récupérer les membres de la communauté\r\n    const fetchMembers = useCallback(() => {\r\n        if (!communityId) return;\r\n\r\n        console.log(`[LOG] Récupération des membres de la communauté avec ID : ${communityId}`);\r\n        axios.get(`${apiUrl}/api/communities/${communityId}/members`)\r\n            .then(response => {\r\n                console.log(\"[LOG] Membres récupérés :\", response.data);\r\n                setMembers(response.data);\r\n            })\r\n            .catch(error => console.error(\"[ERREUR] Erreur lors de la récupération des membres:\", error));\r\n    }, [communityId]);\r\n\r\n    // Fonction pour récupérer les messages de la communauté\r\n    const fetchMessages = useCallback(() => {\r\n        if (!communityId) return;\r\n\r\n        console.log(`[LOG] Récupération des messages de la communauté avec ID : ${communityId}`);\r\n        axios.get(`${apiUrl}/api/communities/${communityId}/messages`)\r\n            .then(response => {\r\n                console.log(\"[LOG] Messages récupérés :\", response.data);\r\n                setMessages(response.data);\r\n            })\r\n            .catch(error => console.error(\"[ERREUR] Erreur lors de la récupération des messages:\", error));\r\n    }, [communityId]);\r\n\r\n    useEffect(() => {\r\n        fetchCommunityDetails();\r\n        fetchMembers();\r\n        fetchMessages();\r\n    }, [fetchCommunityDetails, fetchMembers, fetchMessages]);\r\n\r\n    // Fonction pour envoyer un nouveau message\r\n    const handleSendMessage = () => {\r\n        if (newMessage.trim() === '') return;\r\n\r\n        console.log(`[LOG] Envoi d'un message dans la communauté ID : ${communityId}`);\r\n        axios.post(`${apiUrl}/api/communities/${communityId}/messages`, {\r\n            content: newMessage,\r\n            user_id: userId,\r\n        })\r\n            .then(response => {\r\n                console.log(\"[LOG] Message envoyé avec succès :\", response.data);\r\n                setMessages([...messages, response.data]);\r\n                setNewMessage('');\r\n            })\r\n            .catch(error => console.error(\"[ERREUR] Erreur lors de l'envoi du message:\", error));\r\n    };\r\n\r\n    // Fonction pour gérer le téléchargement de la photo de profil\r\n    const handleProfilePhotoUpload = () => {\r\n        if (!communityId) {\r\n            console.error(\"[ERREUR] L'ID de la communauté est manquant lors du téléchargement de la photo.\");\r\n            return;\r\n        }\r\n\r\n        if (!profilePhoto) {\r\n            console.error(\"[ERREUR] Aucune photo sélectionnée pour le téléchargement.\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('profilePhoto', profilePhoto);\r\n\r\n        console.log(`[LOG] Début du téléchargement de la photo de profil pour la communauté ID : ${communityId}`);\r\n        axios.post(`${apiUrl}/api/communities/${communityId}/upload`, formData, {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        })\r\n        .then((response) => {\r\n            console.log(\"[LOG] Photo de profil mise à jour avec succès :\", response.data);\r\n            alert('Photo de profil mise à jour');\r\n            setProfilePhoto(null);\r\n            fetchCommunityDetails(); // Recharge les détails de la communauté pour afficher la nouvelle photo\r\n        })\r\n        .catch(error => {\r\n            console.error(\"[ERREUR] Erreur lors du téléchargement de la photo de profil:\", error);\r\n            alert('Erreur lors du téléchargement de la photo de profil.');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>{community.name || 'Chargement...'}</h2>\r\n            <p>{community.description || 'Description non disponible.'}</p>\r\n\r\n            {/* Affichage de la photo de profil actuelle */}\r\n            <div>\r\n                <label>Photo de profil actuelle :</label>\r\n                {community.profile_photo ? (\r\n                    \r\n                    <img\r\n    src={`${apiUrl}${community.profile_photo}`}\r\n    alt=\"Profil de la communauté\"\r\n    style={{ width: '100px', height: '100px', borderRadius: '50%' }}\r\n/>\r\n\r\n                ) : (\r\n                    <p>Aucune photo de profil disponible</p>\r\n                )}\r\n            </div>\r\n\r\n            {/* Changer la photo de profil */}\r\n            <div>\r\n                <label>Changer la photo de profil:</label>\r\n                <input type=\"file\" onChange={(e) => {\r\n                    console.log(\"[LOG] Photo sélectionnée :\", e.target.files[0]);\r\n                    setProfilePhoto(e.target.files[0]);\r\n                }} />\r\n                <button onClick={handleProfilePhotoUpload}>Télécharger la nouvelle photo</button>\r\n            </div>\r\n\r\n            {/* Affichage des membres */}\r\n            <h3>Membres :</h3>\r\n            <ul>\r\n                {members.length > 0 ? (\r\n                    members.map((member, index) => (\r\n                        <li key={index}>{member.username}</li>\r\n                    ))\r\n                ) : (\r\n                    <p>Aucun membre pour le moment.</p>\r\n                )}\r\n            </ul>\r\n\r\n            {/* Section de discussion */}\r\n            <h3>Discussions :</h3>\r\n            <div className=\"messages\">\r\n                {messages.length > 0 ? (\r\n                    messages.map((message, index) => (\r\n                        <div key={index} className=\"message\">\r\n                            <strong>{message.username}:</strong> {message.content}\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>Aucun message pour le moment.</p>\r\n                )}\r\n            </div>\r\n\r\n            {/* Champ pour envoyer un message */}\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Écrire un message...\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n            />\r\n            <button onClick={handleSendMessage}>Envoyer</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Communities;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
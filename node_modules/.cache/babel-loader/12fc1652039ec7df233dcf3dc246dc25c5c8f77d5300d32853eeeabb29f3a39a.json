{"ast":null,"code":"import React,{useEffect,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const apiUrl=process.env.REACT_APP_API_URL;console.log(\"API URL utilisée :\",apiUrl);const Admin=()=>{const[users,setUsers]=useState([]);// Liste des utilisateurs\nconst[loading,setLoading]=useState(true);const[error,setError]=useState('');const[selectedUser,setSelectedUser]=useState(null);// Utilisateur sélectionné pour suppression\n// Fonction pour récupérer tous les utilisateurs\nconst fetchUsers=async()=>{try{const response=await fetch(`${apiUrl}/api/users`);// Utilisation de l'URL d'API dynamique\nconst data=await response.json();setUsers(data);setLoading(false);}catch(error){console.error('Erreur lors de la récupération des utilisateurs :',error);setError('Erreur lors de la récupération des utilisateurs.');}};// Fonction pour supprimer un utilisateur\nconst deleteUser=async userId=>{if(!window.confirm('Êtes-vous sûr de vouloir supprimer cet utilisateur ?')){return;}try{const response=await fetch(`${apiUrl}/api/users/${userId}`,{// Utilisation de l'URL d'API dynamique\nmethod:'DELETE'});if(response.ok){alert('Utilisateur supprimé avec succès');fetchUsers();// Mettre à jour la liste après suppression\n}else{const errorMessage=await response.text();alert('Erreur lors de la suppression de l\\'utilisateur : '+errorMessage);}}catch(error){console.error('Erreur lors de la suppression de l\\'utilisateur :',error);}};// Utiliser useEffect pour charger les utilisateurs lors du montage du composant\nuseEffect(()=>{fetchUsers();},[]);if(loading){return/*#__PURE__*/_jsx(\"p\",{children:\"Chargement des utilisateurs...\"});}if(error){return/*#__PURE__*/_jsx(\"p\",{children:error});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Page d'administration\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Bienvenue sur la page d'administration. Vous pouvez g\\xE9rer les utilisateurs ici.\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Liste des utilisateurs\"}),/*#__PURE__*/_jsxs(\"table\",{border:\"1\",cellPadding:\"10\",cellSpacing:\"0\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Nom d'utilisateur\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:users.map(user=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:user.id}),/*#__PURE__*/_jsx(\"td\",{children:user.username}),/*#__PURE__*/_jsx(\"td\",{children:user.email}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteUser(user.id),children:\"Supprimer\"})})]},user.id))})]}),selectedUser&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"D\\xE9tails de l'utilisateur : \",selectedUser.username]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedUser(null),children:\"Fermer les d\\xE9tails\"})]})]});};export default Admin;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","apiUrl","process","env","REACT_APP_API_URL","console","log","Admin","users","setUsers","loading","setLoading","error","setError","selectedUser","setSelectedUser","fetchUsers","response","fetch","data","json","deleteUser","userId","window","confirm","method","ok","alert","errorMessage","text","children","border","cellPadding","cellSpacing","map","user","id","username","email","onClick"],"sources":["C:/Users/mambo/Downloads/ONVM/frontend/src/components/Admin.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\n\r\nconsole.log(\"API URL utilisée :\", apiUrl);\r\n\r\n\r\n\r\nconst Admin = () => {\r\n  const [users, setUsers] = useState([]);  // Liste des utilisateurs\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [selectedUser, setSelectedUser] = useState(null); // Utilisateur sélectionné pour suppression\r\n\r\n  // Fonction pour récupérer tous les utilisateurs\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/api/users`); // Utilisation de l'URL d'API dynamique\r\n      const data = await response.json();\r\n      setUsers(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des utilisateurs :', error);\r\n      setError('Erreur lors de la récupération des utilisateurs.');\r\n    }\r\n  };\r\n\r\n  // Fonction pour supprimer un utilisateur\r\n  const deleteUser = async (userId) => {\r\n    if (!window.confirm('Êtes-vous sûr de vouloir supprimer cet utilisateur ?')) {\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(`${apiUrl}/api/users/${userId}`, { // Utilisation de l'URL d'API dynamique\r\n        method: 'DELETE',\r\n      });\r\n      if (response.ok) {\r\n        alert('Utilisateur supprimé avec succès');\r\n        fetchUsers();  // Mettre à jour la liste après suppression\r\n      } else {\r\n        const errorMessage = await response.text();\r\n        alert('Erreur lors de la suppression de l\\'utilisateur : ' + errorMessage);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de la suppression de l\\'utilisateur :', error);\r\n    }\r\n  };\r\n\r\n  // Utiliser useEffect pour charger les utilisateurs lors du montage du composant\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p>Chargement des utilisateurs...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Page d'administration</h1>\r\n      <p>Bienvenue sur la page d'administration. Vous pouvez gérer les utilisateurs ici.</p>\r\n      \r\n      {/* Affichage de la liste des utilisateurs */}\r\n      <h2>Liste des utilisateurs</h2>\r\n      <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Nom d'utilisateur</th>\r\n            <th>Email</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(user => (\r\n            <tr key={user.id}>\r\n              <td>{user.id}</td>\r\n              <td>{user.username}</td>\r\n              <td>{user.email}</td>\r\n              <td>\r\n                <button onClick={() => deleteUser(user.id)}>Supprimer</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      \r\n      {/* Affichage des détails des utilisateurs */}\r\n      {selectedUser && (\r\n        <div>\r\n          <h2>Détails de l'utilisateur : {selectedUser.username}</h2>\r\n          {/* Ici tu peux ajouter des informations plus détaillées */}\r\n          <button onClick={() => setSelectedUser(null)}>Fermer les détails</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}